## 设置基本信息以及回调内容
## 设置ControllerName
#set($beanName = $!stringUtils.append($!tableInfo.getName(),"Controller"))

## 设置Service名称
#set($serviceName = $!stringUtils.append($tableInfo.getName(),"Service"))
#set($lowerCaseService = $stringUtils.firstLowerCase($!serviceName))


#set($entityName = $!stringUtils.append($tableInfo.getName(),"Entity"))
#set($basicPackage = $!tableInfo.getCallback().getPackageName())


#if($tableInfo.getComment()) #set( $comment= $!stringUtils.append($tableInfo.getComment(),"接口")) #else #set( $comment= $!stringUtils.append($beanName,"接口")) #{end}

## 设置生成的文件名称
$!tableInfo.getCallback().setFileName($!stringUtils.append($beanName,".java"))
## 设置文件包名称
$!tableInfo.getCallback().setPackageName($!stringUtils.append($basicPackage,".controller"))





package $tableInfo.getCallback().getPackageName();

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;

import org.springframework.web.bind.annotation.*;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

import java.util.List;

import com.sdtsoft.common.core.web.domain.AjaxResult;
import org.springframework.beans.factory.annotation.Autowired;
import $!{basicPackage}.entity.$entityName;
import $!{basicPackage}.service.I$serviceName;

/**
 *  $comment
 *
 * @author $!{tableInfo.getAuthor()}
 */
@Api(value="$comment",tags = "$comment",description = "$comment")
@RestController
@RequestMapping("/$!stringUtils.firstLowerCase($!tableInfo.getName())")
public class $!{beanName}{


    @Autowired
    private I${serviceName} $!lowerCaseService;



    @ApiOperation(value="根据参数分页查询数据")
    @GetMapping
    public AjaxResult findPage(Page page, $entityName $stringUtils.firstLowerCase($entityName)) {
        return AjaxResult.success($!{lowerCaseService}.findPageByEntity(page, $stringUtils.firstLowerCase($entityName)));
    }


    @ApiOperation(value="通过主键查询单条数据")
    @GetMapping("/{id}")
    public AjaxResult selectOne(@PathVariable Long id) {
        return AjaxResult.success($!{lowerCaseService}.findById(id));
    }


    @ApiOperation(value="新增数据")
    @PostMapping
    public AjaxResult insert(@RequestBody $entityName $stringUtils.firstLowerCase($entityName)) {
        return AjaxResult.success($!{lowerCaseService}.insert($stringUtils.firstLowerCase($entityName)));
    }


    @ApiOperation(value="修改数据")
    @PutMapping
    public AjaxResult update(@RequestBody $entityName $stringUtils.firstLowerCase($entityName)) {
        return AjaxResult.success($!{lowerCaseService}.updateById($stringUtils.firstLowerCase($entityName)));
    }


    @ApiOperation(value="删除数据")
    @DeleteMapping
    public AjaxResult delete(@RequestParam("idList") List<Long> idList) {
        return AjaxResult.success($!{lowerCaseService}.deleteByPks(idList));
    }
}
